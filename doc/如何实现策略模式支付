1 策略模式支付
  需求：多种支付渠道，每种渠道的实现不同，且商品参数也要输入
  要求：策略模式结合工厂模式结合注解扫描反射零改动其他代码完成旧模块功能新增（符合开闭原则）
  思路与实现：
  * 请求入口带渠道id，商品id. 抽象出支付接口和方法（策略接口）。每种渠道不同的实现（策略实现）
  * 请求入口如何映射拿到需要的实现并加以调用？增加中间层，也就是支付context，该上下文进行转发。
  * context里怎样组合这些渠道实现呢？设计策略工厂。该工厂实现各种策略实现bean的创建。
  * 工厂又怎么知道要创建哪些策略bean呢？三种方式：一是基于xml配置文件（常用）；二是在代码里写死，有几个策略，new几个（简单）；三是基于注解自动扫描和注入到工厂（优雅，且对其他代码完全无修改）。
  * 基于注解方式原理：定义pay注解，带上value=channelId.在工厂中通过反射扫描指定的策略实现包，拿到列表保存到staic map，并newInstance拿到bean.这个bean也可以注入到spring容器，从而策略实现的bean也是唯一的